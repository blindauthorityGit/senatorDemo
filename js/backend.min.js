function domReady() {
    function saveAll() {
        let i = 0,
            formData = new FormData();
        formData.set("what", "all");
        let request = {
            boxes: [],
            stammData: {
                title: "",
                firma: "",
                name: "",
                strasse: "",
                plz: "",
                land: "",
                tel: "",
                mail: "",
                logo: "",
                ort: "",
            },
        };
        const nodeList = document.getElementById("boxField").childNodes;
        for (const key in nodeList)
            if ("DIV" === nodeList[key].nodeName && "" === nodeList[key].id) {
                const type = nodeList[key].dataset.type;
                if ("6" === type) {
                    const inputB =
                        nodeList[key].childNodes[0].childNodes[0].childNodes[4]
                            .childNodes[0];
                    if (inputB.files.length > 0) {
                        const file = inputB.files[0];
                        let name = inputB.files[0].name.replace(".", "_");
                        (name += i),
                            formData.set(name, file),
                            (request.boxes[i] = {
                                type: type,
                                inputA: "image",
                                inputB: name,
                                subType: "image",
                            });
                    } else
                        request.boxes[i] = {
                            type: type,
                            inputA: "noFileSelected",
                            inputB: "",
                            subType: "noFileSelected",
                        };
                } else if ("5" === type) {
                    let inputA =
                        nodeList[key].childNodes[0].childNodes[0].childNodes[2]
                            .childNodes[0].value;
                    const inputB =
                        nodeList[key].childNodes[0].childNodes[0].childNodes[4]
                            .childNodes[0];
                    if (inputB.files.length > 0) {
                        const file = inputB.files[0];
                        let name = inputB.files[0].name.replace(".", "_");
                        (name += i),
                            formData.set(name, file),
                            "" === inputA && (inputA = "noName"),
                            (request.boxes[i] = {
                                type: type,
                                inputA: inputA,
                                inputB: name,
                                subType: "pdf",
                            });
                    } else
                        void 0 !== inputB.dataset.file &&
                            ("" === inputA && (inputA = "noName"),
                            (request.boxes[i] = {
                                type: type,
                                inputA: inputA,
                                inputB: inputB.dataset.file,
                                subType: "pdf/fileExist",
                            }));
                } else {
                    const inputA =
                            nodeList[key].childNodes[0].childNodes[0]
                                .childNodes[2].childNodes[0].value,
                        inputB =
                            nodeList[key].childNodes[0].childNodes[0]
                                .childNodes[4].childNodes[0].value;
                    request.boxes[i] = {
                        type: type,
                        inputA: inputA,
                        inputB: inputB,
                    };
                }
                i++;
            }
        if (
            ((request.stammData.title = title.value),
            (request.stammData.firma = firma.value),
            (request.stammData.name = name.value),
            (request.stammData.strasse = strasse.value),
            (request.stammData.plz = plz.value),
            (request.stammData.land = land.value),
            (request.stammData.tel = tel.value),
            (request.stammData.mail = mail.value),
            (request.stammData.logo = ""),
            (request.stammData.ort = ort.value),
            "" !== logoInputFile.value)
        ) {
            const file = logoInputFile.files[0];
            let name = logoInputFile.files[0].name.replace(".", "_");
            (name += "logo"),
                (request.stammData.logo = name),
                formData.set(name, file);
        }
        formData.set("request", JSON.stringify(request));
        let XHR = new XMLHttpRequest();
        XHR.addEventListener("load", function (event) {
            processing.style.display = "none";
            const response = XHR.response;
            console.log(XHR.response),
                response.success &&
                    response.imgLogoSuccess &&
                    (logo.src = response.logoSrc);
        }),
            XHR.addEventListener("error", function (event) {
                alert("Oops! Something went wrong.");
            }),
            (XHR.responseType = "json"),
            XHR.open("POST", "backend.process.php"),
            XHR.send(formData),
            (processing.style.display = "block");
    }

    function deleteBox() {
        this.parentElement.parentElement.parentElement.parentElement.remove(),
            --counter < 1 && (platzhalter.style.display = "block");
    }
    function moveUp() {
        const thisWrap = this.parentElement.parentElement.parentElement,
            previous = thisWrap.previousSibling;
        "DIV" === previous.nodeName &&
            thisWrap.parentElement.insertBefore(thisWrap, previous);
    }
    function moveDown() {
        const thisWrap = this.parentElement.parentElement.parentElement,
            next = thisWrap.nextSibling;
        null !== next && thisWrap.parentElement.insertBefore(next, thisWrap);
    }
    function addBoxEvent() {
        let box = {};
        (box.type = this.dataset.type),
            (box.inputA = ""),
            (box.inputB = ""),
            addBox(box);
    }
    function addBox(box) {
        if (
            ((box.placeholderA = "..."),
            (box.placeholderB = "..."),
            counter > 10)
        )
            return alert("Only 10 boxes allow"), !1;
        ++counter > 0 && (platzhalter.style.display = "none");
        const boxWrap = document.createElement("div");
        boxWrap.setAttribute("class", "classInputWrapper row classM0");
        const typeWrap = document.createElement("div");
        typeWrap.setAttribute("class", "col-md-12");
        const rowWrap = document.createElement("div");
        rowWrap.setAttribute("class", "row");
        const deletBtnWrap = document.createElement("div");
        deletBtnWrap.setAttribute("class", "classDeleteBtn");
        const deletBtn = document.createElement("i");
        deletBtn.setAttribute("class", "fas fa-times"),
            deletBtnWrap.appendChild(deletBtn);
        const labelA = document.createElement("div");
        labelA.setAttribute("class", "col-md-2 m-bottom"),
            (labelA.innerHTML = "Titel");
        const inputWrapA = document.createElement("div");
        inputWrapA.setAttribute("class", "col-md-10");
        const inputA = document.createElement("input");
        inputA.setAttribute("type", "text"),
            inputA.setAttribute("size", "35"),
            inputA.setAttribute("placeholder", box.placeholderA),
            inputWrapA.appendChild(inputA);
        const labelB = document.createElement("div");
        labelB.setAttribute("class", "col-md-2 m-bottom");
        const inputWrapB = document.createElement("div");
        inputWrapB.setAttribute("class", "col-md-10");
        const inputB = document.createElement("input");
        inputB.setAttribute("type", "text"),
            inputB.setAttribute("size", "50"),
            inputB.setAttribute("placeholder", box.placeholderB),
            inputWrapB.appendChild(inputB),
            rowWrap.appendChild(deletBtnWrap),
            rowWrap.appendChild(labelA),
            rowWrap.appendChild(inputWrapA),
            rowWrap.appendChild(labelB),
            rowWrap.appendChild(inputWrapB),
            typeWrap.appendChild(rowWrap);
        const buttonMainWrap = document.createElement("div");
        buttonMainWrap.setAttribute("class", "col-md-1 classArrowContainer");
        const buttonWrapUp = document.createElement("div");
        buttonWrapUp.setAttribute("class", "classButtonUp");
        const buttonUp = document.createElement("i");
        buttonUp.setAttribute("class", "fas fa-angle-up"),
            buttonWrapUp.appendChild(buttonUp);
        const buttonWrapDown = document.createElement("div");
        buttonWrapDown.setAttribute("class", "classButtonDown");
        const buttonDown = document.createElement("i");
        switch (
            (buttonDown.setAttribute("class", "fas fa-angle-down"),
            buttonWrapDown.appendChild(buttonDown),
            buttonMainWrap.appendChild(buttonWrapUp),
            buttonMainWrap.appendChild(buttonWrapDown),
            boxWrap.appendChild(typeWrap),
            boxWrap.appendChild(buttonMainWrap),
            boxField.appendChild(boxWrap),
            box.type)
        ) {
            case "1":
                boxWrap.setAttribute("data-type", "1"),
                    typeWrap.classList.add("classText"),
                    (labelB.innerHTML = "Inhalt");
                break;
            case "2":
                boxWrap.setAttribute("data-type", "2"),
                    typeWrap.classList.add("classUrl"),
                    (labelB.innerHTML = "URL"),
                    (inputA.placeholder = "URL"),
                    (inputB.placeholder = "www.google.com");
                break;
            case "3":
                boxWrap.setAttribute("data-type", "3"),
                    typeWrap.classList.add("classPhone"),
                    (labelB.innerHTML = "Telefon"),
                    (inputA.placeholder = "Phone"),
                    (inputB.placeholder = "0049 XXX XXX XXX");
                break;
            case "4":
                boxWrap.setAttribute("data-type", "4"),
                    typeWrap.classList.add("classEmail"),
                    (labelB.innerHTML = "Email"),
                    (inputA.placeholder = "Email"),
                    (inputB.placeholder = "mail@domain.com");
                break;
            case "5":
                boxWrap.setAttribute("data-type", "5"),
                    boxWrap.setAttribute("draggable", "false"),
                    typeWrap.classList.add("classDatei"),
                    (labelB.innerHTML = "Datei"),
                    (inputB.type = "file"),
                    (inputA.placeholder = "Name");
        }
        "5" === box.type
            ? ("noName" === box.inputA
                  ? ((inputA.placeholder = "kein Name vergeben"),
                    (inputA.value = ""))
                  : (inputA.value = box.inputA),
              "" !== box.inputB && inputB.setAttribute("data-file", box.inputB))
            : ((inputA.value = box.inputA), (inputB.value = box.inputB)),
            deletBtn.addEventListener("click", deleteBox),
            buttonUp.addEventListener("click", moveUp),
            buttonDown.addEventListener("click", moveDown);
    }
    function openStammDaten(event) {
        event.stopPropagation(),
            (stammDatenDialogClickAway.style.display = "block");
    }
    function stopBubbleUp(event) {
        event.stopPropagation();
    }
    function closeStammDaten(event) {
        event.stopPropagation(),
            "block" === stammDatenDialogClickAway.style.display &&
                ((stammDatenDialogClickAway.style.display = "none"),
                (pwDialog.style.display = "none"));
    }
    function setKontaktData(data) {
        (title.value = data.title),
            (firma.value = data.firma),
            (name.value = data.name),
            (strasse.value = data.strasse),
            (plz.value = data.plz),
            (land.value = data.land),
            (tel.value = data.tel),
            (mail.value = data.mail),
            (ort.value = data.ort),
            "" !== data.logo
                ? (logo.src = data.logo)
                : (logo.src = defaultLogo),
            userName.setAttribute("placeholder", data.userName),
            userMail.setAttribute("placeholder", data.userMail);
    }
    function initPage() {
        let formData = new FormData();
        formData.set("what", "init");
        let XHR = new XMLHttpRequest();
        XHR.addEventListener("load", function (event) {
            const response = XHR.response;
            console.log(XHR.response),
                response.success &&
                    (setKontaktData(response.stammData),
                    response.numBoxes &&
                        response.boxes.forEach((box) => {
                            addBox(box);
                        }),
                    (processing.style.display = "none"));
        }),
            XHR.addEventListener("error", function (event) {
                alert("Oops! Something went wrong.");
            }),
            (XHR.responseType = "json"),
            XHR.open("POST", "backend.process.php"),
            XHR.send(formData);
    }
    function openPwDialog() {
        pwDialog.style.display = "block";
    }
    function saveStammData() {
        let request = {};
        (request.userName = userName.value),
            (request.userMail = userMail.value),
            (request.oldPw = oldPw.value),
            (request.newPw = newPw.value),
            (request.newConfirmPw = newConfirmPw.value);
        let formData = new FormData();
        formData.set("what", "stammData"),
            formData.set("request", JSON.stringify(request));
        let XHR = new XMLHttpRequest();
        XHR.addEventListener("load", function (event) {
            const response = XHR.response;
            console.log(XHR.response),
                response.success &&
                    (response.pwSuccess &&
                        ((pwDialog.style.display = "none"),
                        (oldPw.value = ""),
                        (newPw.value = ""),
                        (newConfirmPw.value = "")),
                    (processing.style.display = "none"));
        }),
            XHR.addEventListener("error", function (event) {
                alert("Oops! Something went wrong.");
            }),
            (XHR.responseType = "json"),
            XHR.open("POST", "backend.process.php"),
            XHR.send(formData),
            (processing.style.display = "block");
    }
    function signOut() {
        window.location = "login.php";
    }
    const boxField = document.getElementById("boxField"),
        textButton = document.getElementById("textBtnBorder"),
        urlButton = document.getElementById("urlBtnBorder"),
        phoneButton = document.getElementById("phoneBtnBorder"),
        mailButton = document.getElementById("emailBtnBorder"),
        fileButton = document.getElementById("dateiBtnBorder"),
        platzhalter = document.getElementById("platzhalter"),
        stammDatenDialogClickAway = document.getElementById(
            "stammDatenDialogClickAway"
        ),
        stammDatenDialog = document.getElementById("stammDatenDialog"),
        openStammDatenBtn = document.getElementById("openStammDatenBtn"),
        saveStammDatenBtn = document.getElementById("saveStammDatenBtn"),
        changeUserPwBtn = document.getElementById("changeUserPwBtn"),
        pwDialog = document.getElementById("pwDialog"),
        title = document.getElementById("title"),
        firma = document.getElementById("kontaktFirma"),
        name = document.getElementById("kontaktName"),
        strasse = document.getElementById("kontaktStrasse"),
        plz = document.getElementById("kontaktPlz"),
        land = document.getElementById("kontaktLand"),
        tel = document.getElementById("kontaktTelefon"),
        mail = document.getElementById("kontaktEmail"),
        logoInputFile = document.getElementById("logoInputFile"),
        logo = document.getElementById("logo"),
        ort = document.getElementById("kontaktOrt"),
        userName = document.getElementById("userName"),
        userMail = document.getElementById("userMail"),
        oldPw = document.getElementById("oldPw"),
        newPw = document.getElementById("newPw"),
        newConfirmPw = document.getElementById("newConfirmPw"),
        processing = document.getElementById("processing"),
        signOutBtn = document.getElementById("signOutBtn"),
        saveBtn = document.getElementById("saveBtn");
    let counter = 0;
    const defaultLogo = "img/logo_ph.jpg";
    textButton.addEventListener("click", addBoxEvent),
        urlButton.addEventListener("click", addBoxEvent),
        phoneButton.addEventListener("click", addBoxEvent),
        mailButton.addEventListener("click", addBoxEvent),
        fileButton.addEventListener("click", addBoxEvent),
        saveBtn.addEventListener("click", saveAll),
        signOutBtn.addEventListener("click", signOut),
        openStammDatenBtn.addEventListener("click", openStammDaten),
        stammDatenDialogClickAway.addEventListener("click", closeStammDaten),
        stammDatenDialog.addEventListener("click", stopBubbleUp),
        changeUserPwBtn.addEventListener("click", openPwDialog),
        saveStammDatenBtn.addEventListener("click", saveStammData),
        initPage();

    setTimeout(() => {
        document.querySelector("#boxField").classList.add("mt-5");
        document
            .getElementsByClassName("classInputWrapper")[0]
            .classList.add("fade-in");
        let colmdtwo = document.getElementsByClassName("col-md-2")[1];
        console.log(document.getElementsByClassName("col-md-2")[1]);
        colmdtwo.style.display = "none";
        document.getElementsByClassName("col-md-2")[2].style.display = "none";
        document.getElementsByClassName("col-md-10")[0].style.display = "none";
        document
            .getElementsByClassName("col-md-10")[1]
            .classList.add("col-md-12");
    }, 500);
}
"loading" === document.readyState
    ? document.addEventListener("DOMContentLoaded", domReady)
    : domReady();
